// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}
model User {
  id        Int     @id @default(autoincrement())
  uniqueId  String  @unique
  nama      String
  email     String  @unique
  isActive  Boolean @default(false)
  password  String
  address   String?
  roles     Role
  nim     String?
  semester String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  
  // Tambahkan relasi balik
  plansForWho   Plan[] @relation("PlanForWho")
  plansCreated  Plan[] @relation("PlanCreatedBy")
}

model Project {
  id            Int    @id @default(autoincrement())
  uniqueId String @unique
  projectName   String
  clientName    String
  projectFeature Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

enum StatusPlan {
  notyet
  onprogres
  completed
}

model Plan {
  id            Int    @id @default(autoincrement())
  uniqueId String @unique
  ForWho User @relation("PlanForWho", fields: [forWhoUid], references: [uniqueId])
  forWhoUid String
  createdBy User @relation("PlanCreatedBy", fields: [createdById], references: [uniqueId])
  createdById String
  Start DateTime
  End DateTime
  NamePlan String
  Status StatusPlan
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}
