// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DATABASE_URL")
}
model User {
  id                Int                  @id @default(autoincrement())
  uniqueId          String               @unique @default(cuid())
  roleId            Int                  @default(1)
  prodiId           Int?
  semester          String?
  profil            String?
  email             String               @unique
  nama              String
  NIM               String?
  NIP               String?
  isActive          Boolean              @default(false)
  password          String
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  deletedAt         DateTime?
  role              Role                 @relation(fields: [roleId], references: [id])
  prodi             MasterProdi?               @relation(fields: [prodiId], references: [id])
  // Relasi ke peminjaman                
  peminjaman_items    Peminjaman_Item[] @relation("UserPeminjaman")
  peminjaman_handsets Peminjaman_Handset[]
  peminjaman_ruangans Peminjaman_Ruangan[]
  
  // Relasi ke logs
  logs              Log[]
  
  // Relasi ke notifikasi
  notifikasis Notifikasi[]
}

model MasterProdi {
  id          Int       @id @default(autoincrement())
  nama_prodi  String    
  kode_prodi  String    
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  users       User[]
  matkul      Master_Matkul[]
}

model Role {
  id          Int       @id @default(autoincrement())
  deskripsi   String    @default("Default Description")
  nama_role   String    @default("Default Role")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  users       User[]
}

model Kategori_Barang {
  id            Int       @id @default(autoincrement())
  nama_kategori String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  barangs       Barang[]
}

model Barang {
  id                  Int                  @id @default(autoincrement())
  kategori_id         Int
  kode_barang         String               @unique
  nama_barang         String
  merek               String?
  kondisi             String
  jumlah              Int                 @default(0)
  status              String
  foto_barang         String?              
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  deletedAt           DateTime?
  kategori            Kategori_Barang      @relation(fields: [kategori_id], references: [id])
  
  // Relasi ke peminjaman handsets dan items
  peminjaman_handsets Peminjaman_Handset[]
  peminjaman_items    Peminjaman_Item[]
}

model Ruangan {
  id                  Int                  @id @default(autoincrement())
  gedung              String
  nama_ruangan        String
  kode_ruangan        String               @unique
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  deletedAt           DateTime?
  // Relasi ke peminjaman ruangan
  peminjaman_ruangans Peminjaman_Ruangan[]
}

model Peminjaman_Item {
  id                  Int        @id @default(autoincrement())
  user_id             Int
  barang_id           Int
  estimasi_pinjam     DateTime
  jumlah              Int         @default(0)
  jam_kembali         DateTime?
  jam_pinjam          DateTime
  kode_peminjaman     String     @unique
  tanggal_pinjam      DateTime
  tanggal_kembali     DateTime?
  status              String
  kegiatan            String
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  deletedAt           DateTime?

  // FK to user & barang
  user                User       @relation("UserPeminjaman", fields: [user_id], references: [id])
  barang              Barang     @relation(fields: [barang_id], references: [id])

  // NEW: optional FK to Peminjaman_Handset and relation name that matches the array on the other side
  peminjaman_handset_id Int?
  peminjaman_handset    Peminjaman_Handset? @relation("HandsetItems", fields: [peminjaman_handset_id], references: [id])
}

model Peminjaman_Handset {
  id                    Int        @id @default(autoincrement())
  user_id               Int
  barang_id             Int
  peminjaman_handset_id Int? // Ini sepertinya salah, seharusnya referensi ke peminjaman_ruangan jika di ERD
  kode_peminjaman       String     @unique
  tanggal_pinjam        DateTime
  tanggal_kembali       DateTime?
  status                String
  kegiatan              String
  Dokumen               String?    
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  deletedAt             DateTime?
  
  barang              Barang               @relation(fields: [barang_id], references: [id])
  user                User                 @relation(fields: [user_id], references: [id])
  peminjaman_ruangan  Peminjaman_Ruangan[]
  peminjaman_item     Peminjaman_Item[]     @relation("HandsetItems")
}

model Peminjaman_Ruangan {
  id                    Int                  @id @default(autoincrement())
  ruangan_id            Int
  user_id               Int
  peminjaman_handset_id Int?
  matkul_id             Int?                 
  tanggal               DateTime
  jam_mulai             DateTime
  jam_selesai           DateTime
  status                String
  kegiatan              String
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
  deletedAt             DateTime?

  ruangan             Ruangan              @relation(fields: [ruangan_id], references: [id])
  user                User                 @relation(fields: [user_id], references: [id])
  peminjaman_handset  Peminjaman_Handset?  @relation(fields: [peminjaman_handset_id], references: [id])
  matkul              Master_Matkul?       @relation(fields: [matkul_id], references: [id]) 
}


model Log {
  id              Int       @id @default(autoincrement())
  user_id         Int
  pesan           String
  aksi            String
  tabel_terkait   String?
  createdAt       DateTime  @default(now())
  
  user User @relation(fields: [user_id], references: [id])
}

model Notifikasi {
  id        Int       @id @default(autoincrement())
  user_id   Int
  pesan     String
  judul     String?
  send_at   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  
  user User @relation(fields: [user_id], references: [id])
}

model Master_Matkul {
  id                 Int                  @id @default(autoincrement())
  prod_id            Int
  matkul             String
  prodi              MasterProdi          @relation(fields: [prod_id], references: [id])
  peminjaman_ruangan Peminjaman_Ruangan[]
}