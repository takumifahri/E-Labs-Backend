// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_DATABASE_URL")
}

// Enums
enum StatusPeminjamanItem {
  DIAJUKAN
  DIPINJAM
  DIKEMBALIKAN
  TERLAMBAT
}

enum StatusPeminjamanHandset {
  DIAJUKAN
  DISETUJUI
  DITOLAK
  DIBATALKAN
  SELESAI
  DIPINJAM
}

enum StatusPeminjamanRuangan {
  DIAJUKAN
  DISETUJUI
  DITOLAK
  DIBATALKAN
  SELESAI
  BERLANGSUNG
}

// User Model
model User {
  id                Int                  @id @default(autoincrement())
  uniqueId          String               @unique @default(cuid())
  roleId            Int                  @default(1)
  prodiId           Int?
  semester          String?
  profil            String?
  email             String               @unique
  nama              String
  NIM               String?
  NIP               String?
  isActive          Boolean              @default(false)
  isBlocked         Boolean              @default(false)
  password          String
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  deletedAt         DateTime?

  // FK Relations
  role              Role                 @relation(fields: [roleId], references: [id])
  prodi             MasterProdi?         @relation(fields: [prodiId], references: [id])
  
  // Peminjaman Relations (as borrower)
  peminjaman_items    Peminjaman_Item[]    @relation("UserPeminjamanItem")
  peminjaman_handsets Peminjaman_Handset[] @relation("UserPeminjamanHandset")
  peminjaman_ruangans Peminjaman_Ruangan[] @relation("UserPeminjamanRuangan")
  
  // Accepted Relations (as admin/verifier)
  accepted_peminjaman_items    Peminjaman_Item[]    @relation("AcceptedPeminjamanItem")
  accepted_peminjaman_handsets Peminjaman_Handset[] @relation("AcceptedPeminjamanHandset")
  accepted_peminjaman_ruangans Peminjaman_Ruangan[] @relation("AcceptedPeminjamanRuangan")
  
  // Other Relations
  logs              Log[]
  notifikasis       Notifikasi[]
}

// Master Data Models
model MasterProdi {
  id          Int       @id @default(autoincrement())
  nama_prodi  String    
  kode_prodi  String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  
  users       User[]
  matkul      Master_Matkul[]
}

model Role {
  id          Int       @id @default(autoincrement())
  deskripsi   String    @default("Default Description")
  nama_role   String    @unique @default("Default Role")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  
  users       User[]
}

model Kategori_Barang {
  id            Int       @id @default(autoincrement())
  nama_kategori String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  
  barangs       Barang[]
}

model Barang {
  id                  Int                  @id @default(autoincrement())
  kategori_id         Int
  kode_barang         String               @unique
  nama_barang         String
  merek               String?
  kondisi             String
  jumlah              Int                  @default(0)
  status              String
  foto_barang         String?              
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  deletedAt           DateTime?
  
  // FK Relations
  kategori            Kategori_Barang      @relation(fields: [kategori_id], references: [id])
  
  // Peminjaman Relations
  peminjaman_handsets Peminjaman_Handset[]
  peminjaman_items    Peminjaman_Item[]
}

model Ruangan {
  id                  Int                  @id @default(autoincrement())
  gedung              String
  nama_ruangan        String
  kode_ruangan        String               @unique
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  deletedAt           DateTime?
  
  // Relations
  peminjaman_ruangans Peminjaman_Ruangan[]
}

model Master_Matkul {
  id                 Int                  @id @default(autoincrement())
  prodi_id           Int
  matkul             String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  deletedAt          DateTime?
  
  // FK Relations
  prodi              MasterProdi          @relation(fields: [prodi_id], references: [id])
  
  // Relations
  peminjaman_ruangan Peminjaman_Ruangan[]
}

// Peminjaman Models
model Peminjaman_Item {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  barang_id             Int
  estimasi_pinjam       DateTime
  jumlah                Int                     @default(0)
  jam_kembali           DateTime?
  jam_pinjam            DateTime
  kode_peminjaman       String                  @unique
  tanggal_pinjam        DateTime
  tanggal_kembali       DateTime?
  status                StatusPeminjamanItem
  kegiatan              String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  deletedAt             DateTime?
  
  // Admin who accepted/verified this request
  accepted_by_id        Int?
  
  // Optional relationship to handset (for grouped items)
  peminjaman_handset_id Int?

  // FK Relations
  user                  User                    @relation("UserPeminjamanItem", fields: [user_id], references: [id])
  barang                Barang                  @relation(fields: [barang_id], references: [id])
  accepted_by           User?                   @relation("AcceptedPeminjamanItem", fields: [accepted_by_id], references: [id])
  peminjaman_handset    Peminjaman_Handset?     @relation("HandsetItems", fields: [peminjaman_handset_id], references: [id])
}

model Peminjaman_Handset {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  barang_id             Int
  kode_peminjaman       String     @unique
  tanggal_pinjam        DateTime
  tanggal_kembali       DateTime?
  status                StatusPeminjamanHandset
  kegiatan              String
  dokumen               String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  deletedAt             DateTime?
  
  // Admin who accepted/verified this request
  accepted_by_id        Int?

  // FK Relations
  barang                Barang                  @relation(fields: [barang_id], references: [id])
  user                  User                    @relation("UserPeminjamanHandset", fields: [user_id], references: [id])
  accepted_by           User?                   @relation("AcceptedPeminjamanHandset", fields: [accepted_by_id], references: [id])

  // Related Items and Ruangan
  peminjaman_items      Peminjaman_Item[]       @relation("HandsetItems")
  peminjaman_ruangans   Peminjaman_Ruangan[]
}

model Peminjaman_Ruangan {
  id                    Int                     @id @default(autoincrement())
  ruangan_id            Int
  user_id               Int
  matkul_id             Int?
  tanggal               DateTime
  jam_mulai             DateTime
  jam_selesai           DateTime
  status                StatusPeminjamanRuangan
  kegiatan              String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  deletedAt             DateTime?
  
  // Admin who accepted/verified this request
  accepted_by_id        Int?
  
  // Optional relationship to handset (if room booking is part of equipment loan)
  peminjaman_handset_id Int?

  // FK Relations
  ruangan               Ruangan                 @relation(fields: [ruangan_id], references: [id])
  user                  User                    @relation("UserPeminjamanRuangan", fields: [user_id], references: [id])
  matkul                Master_Matkul?          @relation(fields: [matkul_id], references: [id])
  accepted_by           User?                   @relation("AcceptedPeminjamanRuangan", fields: [accepted_by_id], references: [id])
  peminjaman_handset    Peminjaman_Handset?     @relation(fields: [peminjaman_handset_id], references: [id])
}


// Logging and Notification Models
model Log {
  id              Int       @id @default(autoincrement())
  user_id         Int
  pesan           String
  aksi            String
  tabel_terkait   String?
  createdAt       DateTime  @default(now())
  
  // FK Relations
  user            User      @relation(fields: [user_id], references: [id])
}

model Notifikasi {
  id        Int       @id @default(autoincrement())
  user_id   Int
  pesan     String
  judul     String?
  send_at   DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  
  // FK Relations
  user      User      @relation(fields: [user_id], references: [id])
}